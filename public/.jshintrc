{
  // Settings
  //"passfail"      : false, // Stop on first error. deprecated.
  "maxerr"        : 50,    // Maximum error before stopping.


  // Predefined globals whom JSHint will ignore.
  "browser"       : true,  // Standard browser globals e.g. `window`, `document`.
  "couch"         : false,
  "dojo"          : false,
  "jquery"        : true,
  "mootools"      : false,
  "node"          : false,
  "prototypejs"   : false,
  "rhino"         : false,
  "wsh"           : false,

  // globals defined with apis:
  // File > Setting > Libraries > jquery-2.0.0
  // File > Setting > Libraries > jquery UI-1.10.2
  // apis/jquery.ui.map_api.js
  // apis/google_maps_api_v3_16.js
  // apis/intel_api_custom.js

  // Custom globals.
  "predef"        : [
  ],


  // Development.
  "debug"         : true,  // Allow debugger statements e.g. browser breakpoints.
  "devel"         : true,  // Allow developments statements e.g. `console.log();`.


  // EcmaScript 5.
  "es5"           : false, // Allow EcmaScript 5 syntax.
  "globalstrict"  : false, // Allow global "use strict" (also enables 'strict').
  "strict"        : false, // Require `use strict` pragma  in every file.


  // The Good Parts.
  "asi"           : false, // Tolerate Automatic Semicolon Insertion (no semicolons).
  "bitwise"       : false, // Prohibit bitwise operators (&, |, ^, etc.).
  "boss"          : true,  // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
  "curly"         : false, // Require {} for every new block or scope.
  "eqeqeq"        : true,  // Require triple equals i.e. `===`.
  "eqnull"        : true,  // Tolerate use of `== null`.
  "evil"          : false, // Tolerate use of `eval`.
  "expr"          : false, // Tolerate `ExpressionStatement` as Programs.
  "forin"         : false, // Tolerate `for in` loops without `hasOwnPrototype`.
  "freeze"        : true,  // Prohibits the modification of native objects such as Array, Number, Date, etc.
  "immed"         : true,  // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
  "latedef"       : false, // Prohibit variable use before definition.
  "laxbreak"      : false, // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
  "loopfunc"      : false, // Allow functions to be defined within loops.
  "noarg"         : true,  // Prohibit use of `arguments.caller` and `arguments.callee`.
  "regexdash"     : true,  // Tolerate unescaped last dash i.e. `[-...]`.
  "regexp"        : false, // Prohibit `.` and `[^...]` in regular expressions.
  "scripturl"     : false, // Tolerate script-targeted URLs.
  "shadow"        : false, // Allows re-define variables later in code e.g. `var x=1; x=2;`.
  "supernew"      : false, // Tolerate `new function () { ... };` and `new Object;`.
  "undef"         : false, // Require all non-global variables be declared before they are used.


  // Personal styling prefrences.
  "newcap"        : true,  // Require capitalization of all constructor functions e.g. `new F()`.
  "noempty"       : true,  // Prohipit use of empty blocks.
  //"nomen"         : false, // Prohibit use of initial or trailing underbars in names. deprecated.
  "nonew"         : true,  // Prohibit use of constructors for side-effects.
  //"onevar"        : false, // Allow only one `var` statement per function. deprecated.
  "plusplus"      : true,  // Prohibit use of `++` & `--`.
  "sub"           : false // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
  //"trailing"      : true,  // Prohibit trailing whitespaces. deprecated.
  //"white"         : false  // Check against strict whitespace and indentation rules. deprecated.
}